.row-fluid(data-nav-heading='Options')
  .demo(data-nav-anchor='How To Option')
    p
      | There are two levels of options:
      ul
        li Global Options
        li Form Specific Options
      | The form specific options prototypically inherit from the global options. Since they aren't copied, any changes to the globals will propogate through to each validation form on the page.
    p
      | These options can be changed using the 
      a(data-link) Configure
      |  API above.
    br
    table.table.table-striped.table-bordered.api-table.highlight-col3-table
      thead
        tr
          th Name
          th Description
          th Default
      tbody
        tr
          td debug
          td Display log messages flag
          td false
        tr
          td validateAttribute
          td Attribute to use for listing validation rules
          td "data-validate"
        tr(nav-id='validationeventtrigger')
          td validationEventTrigger
          td Event which will trigger validation
          td "blur"
        tr
          td scroll
          td Automatically scroll viewport to the first error
          td true
        tr
          td focusFirstField
          td Automatically focus into to the first field with an error
          td true
        tr
          td hideErrorOnChange
          td Hide error while the user is editing the field
          td false
        tr
          td skipHiddenFields
          td Whether to skip the hidden fields with validators
          td true
        tr
          td errorContainer
          td A function which returns the element in which to add or remove the "errorClass"
          td function(input) { return input; }
        tr
          td errorClass
          td The class name to be toggled on the "errorContainer"
          td "error"
        tr
          td beforeSubmit
          td
            | Pre-form-submit hook. If you return 
            code true
            | , form will submit.
          td function(form, result) { return result; }
        tr
          td track
          td
            | Method used for tracking user validation interactions. Read more here 
            a(data-link) Validation Tracking
          td $.noop
        tr
          td prompt
          td
            | Method used to display validation errors. Read more here 
            a(data-link) Prompt Handler
          td function(element, text, opts) { $.notify(element, text, opts); }
     
  .demo(data-nav-anchor='Validation Tracking')
    p
      | The Validation Tracking Handler is a function which looks like 
      code function(type, fieldId, result)
    ul
      li
        code type
        |  - Currently, there is only one type:  
        code "Validate"
      li
        code fieldId
        |  -  Field Identifier is made up of the form name
        | followed by the field name. Name is id attribute, otherwise
        | falls back to the name attribute, otherwise falls back to a
        | randomly generated ID.
      li
        code result
        |  - The validation result will be one of:
        ol
          li: code "Valid"
          li
            code "Skip"
            i  (Meaning the field was hidden or has no validators)
          li The error message that was displayed on the field
    p
      | This was intended for use with Google Analytics Event Tracking.
      | Following it's 3 column implementation: Category, Action and Label.
    p
      | An example function to track validations using Google Analytics might be something like:
    
    pre.prettyprint.
      $.verify({
        track: function(type, fieldId, result) {
          if(_gaq) _gaq.push(['_trackEvent', type, fieldId, result]);
        }
      });
    p
      | Also note, only validations triggered from the 
      a(data-link) validationEventTrigger
      |  ("blur" by default) will be tracked. This prevents
      | false positives from early form validations.
  .demo(data-nav-anchor='Prompt Handler')
    p
      | The Prompt Handler is a function which looks like 
      code function(element, text[, opts])
      | . So a really simple function might be:
    pre.prettyprint.
      $.verify({
        prompt: function(element, text) {
          alert(text);
        }
      });
    
    p
      | Or you might want to get abit more fancy with some assistance of HTML:
    pre.prettyprint.
      &lt;input type='text' data-validate='required'/>
      &lt;span class='tip'>&lt;/span>
    pre.prettyprint.
      $.verify({
        prompt: function(element, text) {
          element.siblings(".tip").html(text || '');
        }
      });
    .alert.alert-info
      strong Pro Tip 
      | The 
      code text
      |  parameter will be 
      code null
      |  when there is no error, thereby clearing the error.
    p
      | Or you could get 
      b even 
      | fancier and include Notify.js by 
      a(data-link) download
      | ing the packaged version and then you don't have to worry 
      | about making your own Prompt Handler.
    pre.prettyprint.
      $.verify({
        // no options required !
      });
    p 
      | Also note,
      | Notify.js allows you make custom prompt styles and themes as
      | opposed to the standard bootstrap alert style.
    h4
      | Check out Notify.js at  
      a(href='http://notifyjs.com') http://notifyjs.com 
//Options 
